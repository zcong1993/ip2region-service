// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IP struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP) Reset()         { *m = IP{} }
func (m *IP) String() string { return proto.CompactTextString(m) }
func (*IP) ProtoMessage()    {}
func (*IP) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_8a94b616e25f7574, []int{0}
}
func (m *IP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP.Unmarshal(m, b)
}
func (m *IP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP.Marshal(b, m, deterministic)
}
func (dst *IP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP.Merge(dst, src)
}
func (m *IP) XXX_Size() int {
	return xxx_messageInfo_IP.Size(m)
}
func (m *IP) XXX_DiscardUnknown() {
	xxx_messageInfo_IP.DiscardUnknown(m)
}

var xxx_messageInfo_IP proto.InternalMessageInfo

func (m *IP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type IpInfo struct {
	CityId               int64    `protobuf:"varint,1,opt,name=cityId,proto3" json:"cityId,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Region               string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Province             string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Isp                  string   `protobuf:"bytes,6,opt,name=isp,proto3" json:"isp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpInfo) Reset()         { *m = IpInfo{} }
func (m *IpInfo) String() string { return proto.CompactTextString(m) }
func (*IpInfo) ProtoMessage()    {}
func (*IpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_8a94b616e25f7574, []int{1}
}
func (m *IpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpInfo.Unmarshal(m, b)
}
func (m *IpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpInfo.Marshal(b, m, deterministic)
}
func (dst *IpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpInfo.Merge(dst, src)
}
func (m *IpInfo) XXX_Size() int {
	return xxx_messageInfo_IpInfo.Size(m)
}
func (m *IpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IpInfo proto.InternalMessageInfo

func (m *IpInfo) GetCityId() int64 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *IpInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *IpInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *IpInfo) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *IpInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *IpInfo) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func init() {
	proto.RegisterType((*IP)(nil), "pb.IP")
	proto.RegisterType((*IpInfo)(nil), "pb.IpInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IP2RegionClient is the client API for IP2Region service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IP2RegionClient interface {
	Search(ctx context.Context, in *IP, opts ...grpc.CallOption) (*IpInfo, error)
}

type iP2RegionClient struct {
	cc *grpc.ClientConn
}

func NewIP2RegionClient(cc *grpc.ClientConn) IP2RegionClient {
	return &iP2RegionClient{cc}
}

func (c *iP2RegionClient) Search(ctx context.Context, in *IP, opts ...grpc.CallOption) (*IpInfo, error) {
	out := new(IpInfo)
	err := c.cc.Invoke(ctx, "/pb.IP2Region/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IP2RegionServer is the server API for IP2Region service.
type IP2RegionServer interface {
	Search(context.Context, *IP) (*IpInfo, error)
}

func RegisterIP2RegionServer(s *grpc.Server, srv IP2RegionServer) {
	s.RegisterService(&_IP2Region_serviceDesc, srv)
}

func _IP2Region_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IP2RegionServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.IP2Region/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IP2RegionServer).Search(ctx, req.(*IP))
	}
	return interceptor(ctx, in, info, handler)
}

var _IP2Region_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.IP2Region",
	HandlerType: (*IP2RegionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _IP2Region_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_pb_8a94b616e25f7574) }

var fileDescriptor_pb_8a94b616e25f7574 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0x15, 0xa7, 0xbf, 0xff, 0xf6, 0x0e, 0x80, 0x2c, 0x40, 0x56, 0xc4, 0x80, 0x32, 0x21,
	0x86, 0x58, 0xb4, 0x1b, 0x13, 0xab, 0xb7, 0x28, 0x3c, 0x41, 0x62, 0x42, 0xb8, 0x12, 0xf2, 0xbd,
	0x72, 0x4d, 0xa5, 0xae, 0xbc, 0x02, 0xbc, 0x19, 0xaf, 0xc0, 0x83, 0xa0, 0xdc, 0x16, 0x26, 0x9f,
	0xef, 0x1c, 0x9f, 0x23, 0x1b, 0x96, 0x3c, 0x34, 0x9c, 0x28, 0x93, 0x51, 0x3c, 0x54, 0x57, 0x13,
	0xd1, 0xf4, 0x3a, 0xba, 0x9e, 0xd1, 0xf5, 0x31, 0x52, 0xee, 0x33, 0x52, 0xdc, 0x1e, 0x6e, 0xd4,
	0xe7, 0xa0, 0x7c, 0x6b, 0x4e, 0x40, 0x21, 0xdb, 0xe2, 0xba, 0xb8, 0x59, 0x75, 0x0a, 0xb9, 0xfe,
	0x2c, 0x40, 0x7b, 0xf6, 0xf1, 0x99, 0xcc, 0x25, 0xe8, 0x80, 0x79, 0xef, 0x9f, 0x24, 0x2e, 0xbb,
	0x23, 0x19, 0x0b, 0xff, 0x03, 0xbd, 0xc5, 0x9c, 0xf6, 0x56, 0x49, 0xef, 0x17, 0xe7, 0x46, 0x1a,
	0x27, 0xa4, 0x68, 0x4b, 0x09, 0x8e, 0x64, 0x2a, 0x58, 0x72, 0xa2, 0x1d, 0xc6, 0x30, 0xda, 0x85,
	0x24, 0x7f, 0x6c, 0x0c, 0x2c, 0xe6, 0x5d, 0xfb, 0x4f, 0x7c, 0xd1, 0xe6, 0x0c, 0x4a, 0xdc, 0xb2,
	0xd5, 0x62, 0xcd, 0x72, 0xfd, 0x00, 0x2b, 0xdf, 0xae, 0xbb, 0xc3, 0xdc, 0x06, 0xf4, 0xe3, 0xd8,
	0xa7, 0xf0, 0x62, 0x74, 0xc3, 0x43, 0xe3, 0xdb, 0x0a, 0xe4, 0x94, 0x67, 0xd7, 0x17, 0xef, 0x5f,
	0xdf, 0x1f, 0xea, 0xb4, 0x06, 0xb7, 0xbb, 0x73, 0x89, 0x83, 0x43, 0xbe, 0x2f, 0x6e, 0x07, 0x2d,
	0xbf, 0xde, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x6c, 0xf8, 0x4a, 0x23, 0x01, 0x00, 0x00,
}
